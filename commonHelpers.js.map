{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios, { Axios } from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport rejectedIcon from './img/rejectedIcon.svg';\nimport closeIcon from './img/izitoast-close.svg';\n\nclass Spinner {\n  constructor(parentElemQuery) {\n    this.parent = parentElemQuery;\n  }\n\n  /**\n   * @description Adds a spinner to the page.\n   */\n\n  add() {\n    document.querySelector(this.parent).innerHTML =\n      '<div id=\"spinner-container\" style=\"padding-top: 25px; display:flex; flex-direction:column; gap:15px; align-items:center;\"><span class=\"js-processing-request\">Loading images, please wait...</span><span class=\"loader\"></span></div>';\n  }\n\n  /**\n   * @description Removes previously added spinner from the page.\n   */\n\n  remove() {\n    document.querySelector(this.parent).innerHTML = '';\n  }\n}\n\n/**\n * @param {array} data Expects an array of objects containing image data.\n * @param {string} parentElemQuery Expects a string containing DOM element query (class, id, etc).\n * @param {array} imgProperties Expects an array of three image properties to look for in data (largeImageURL, thumbnailURL, altText).\n * @param {array} descProperties Expects an array of additional description properties to look for in data (downloads, size, comments, etc).\n * @param {boolean} showDetails Expects a boolean value to render detailed information or not.\n */\n\nclass Gallery {\n  #markup;\n  #imgProperties;\n  #descProperties;\n  #imgData;\n  #descData;\n  #showDetails;\n  #canPaginate;\n\n  constructor(\n    data = [],\n    parentElemQuery = '',\n    imgProperties = [],\n    descProperties = [],\n    showDetails\n  ) {\n    this.rawData = data;\n    this.parent = parentElemQuery;\n    this.#imgProperties = imgProperties;\n    this.#descProperties = descProperties;\n    this.#showDetails = showDetails;\n    this.#imgData = this.#dataFilter(this.rawData, this.#imgProperties);\n    this.#descData = this.#dataFilter(this.rawData, this.#descProperties);\n    this.#markup = this.#createMarkup(this.#imgData, this.#descData);\n  }\n\n  /**\n   * @param {string} userInput Expects string value for testing.\n   * @returns {boolean} Returns true or false.\n   */\n\n  static testInput(userInput) {\n    if (!userInput.trim()) {\n      return false;\n    }\n    return /^[a-z\\s]+$/gi.test(userInput.trim());\n  }\n\n  /**\n   * @param {string} result Accepts one of two strings: 'wrong input' | 'nothing found'.\n   * @description Displays a popup area providing user with a feedback from the app.\n   */\n\n  static showPopup(result) {\n    const options = {\n      class: 'js-izitoast-message',\n      titleColor: '#FFFFFF',\n      messageColor: '#FFFFFF',\n      message:\n        result === 'wrong input'\n          ? 'Try something like \"kitty\", \"best friends\", \"on the Moon\" ;)'\n          : 'Sorry, there are no images matching your search query. Please try again!',\n      backgroundColor: result === 'wrong input' ? '#e0c34c' : '#ef4040',\n      progressBarColor: result === 'wrong input' ? '#f7e28b' : '#b51b1b',\n      messageSize: '16px',\n      position: 'topRight',\n      displayMode: 'replace',\n      pauseOnHover: false,\n      iconUrl: rejectedIcon,\n      close: false,\n\n      buttons: [\n        [\n          `<button type=\"button\" style=\"background-color: transparent;\"><img src=${closeIcon}></button>`,\n          function (instance, toast) {\n            instance.hide({ transitionOut: 'fadeOut' }, toast);\n          },\n        ],\n      ],\n      onOpening: function (_, toast) {\n        refs.container.innerHTML = '';\n        refs.input.blur();\n        refs.input.addEventListener(\n          'focus',\n          () => {\n            iziToast.hide({ transitionOut: 'fadeOut' }, toast);\n          },\n          { once: true }\n        );\n      },\n      onClosed: function (_, toast) {\n        refs.input.removeEventListener(\n          'focus',\n          () => {\n            iziToast.hide({ transitionOut: 'fadeOut' }, toast);\n          },\n          { once: true }\n        );\n      },\n    };\n    iziToast.show(options);\n  }\n\n  /**\n   * @param {array} data Expects an array of objects of raw data as a result of fetch operation.\n   * @param {array} propsList Expects an array of strings indicating which properties to filter out of raw data.\n   * @returns {object} Returns an array of objects with requested properties only.\n   */\n\n  #dataFilter(data, propsList) {\n    return data.map(obj => {\n      const filtered = {};\n      propsList.forEach(keyName => {\n        filtered[keyName] = obj[keyName];\n      });\n      return filtered;\n    });\n  }\n\n  /**\n   * @param {array} img Expects an array of objects containing information related to each image, and alternative text to be shown.\n   * @param {array} desc Expects an array of objects containing information related to each image description.\n   * @returns {string} Returns a ready for use markup with or without image description.\n   */\n\n  #createMarkup(img, desc) {\n    const imgDesc = this.#showDetails\n      ? desc.map(\n          x =>\n            `<ul class=\"js-item-desc\">\n            <li class=\"js-desc-wrapper\">\n              <span class=\"js-desc-prop\">Likes</span>\n              <span class=\"js-desc-value\">${x.likes}</span>\n            </li>\n            <li class=\"js-desc-wrapper\">\n              <span class=\"js-desc-prop\">Views</span>\n              <span class=\"js-desc-value\">${x.views}</span>\n            </li>\n            <li class=\"js-desc-wrapper\">\n              <span class=\"js-desc-prop\">Comments</span>\n              <span class=\"js-desc-value\">${x.comments}</span>\n            </li>\n            <li class=\"js-desc-wrapper\">\n              <span class=\"js-desc-prop\">Downloads</span>\n              <span class=\"js-desc-value\">${x.downloads}</span>\n            </li>\n          </ul>`\n        )\n      : '';\n\n    const markup = img\n      .map(\n        (x, i) =>\n          `<li class=\"js-gallery-item\"><a class=\"js-image-container\" href=\"${\n            x.largeImageURL\n          }\"><img class=\"js-item-image\" src=\"${x.webformatURL}\" alt=\"${\n            x.tags\n          }\" /></a>${imgDesc ? imgDesc[i] : ''}</li>`\n      )\n      .join('\\n\\n');\n    return markup;\n  }\n\n  /**\n   * @description Adds new markup to the parent element.\n   */\n\n  render() {\n    document.querySelector(this.parent).innerHTML += this.#markup;\n    // if (!vars.hasLoadmoreButton) {\n    //   document.querySelector(this.parent).insertAdjacentHTML(\n    //     'afterend',\n    //     `<button class=\"js-loadmore-button\" type=\"button\" name=\"loadmore\">\n    //     Load more\n    //   </button>`\n    //   );\n    // }\n    const images = document.querySelectorAll('.js-item-image');\n    images.forEach((x, i) =>\n      x.addEventListener('load', () => {\n        document\n          .querySelectorAll('.js-gallery-item')\n          [i].classList.add('visible');\n      })\n    );\n  }\n}\n\n////////////////////////////////////////////////////////////////////////\n\nconst refs = {\n  body: document.querySelector('body'),\n  form: document.querySelector('.js-search-form'),\n  input: document.querySelector('.js-search-input'),\n  container: document.querySelector('.js-gallery'),\n  checkbox: document.querySelector('.js-search-checkbox'),\n  loadmore: document.querySelector('.js-loadmore-button') || null,\n};\n\nconst requestUrl = 'https://pixabay.com/api/';\n\nconst requestParams = {\n  key: '42242477-df8643eaa45736c853493b589',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n  q: null,\n};\n\nconst spinner = new Spinner('.js-gallery');\n\n// refs.form.addEventListener('submit', e => {\n//   e.preventDefault();\n//   axios.defaults.baseURL = 'https://pixabay.com/api/';\n//   axios.defaults.headers.common['header-name'] =\n//     '42242477-df8643eaa45736c853493b589';\n//   axios.get('', { params: requestParams });\n// });\n\n// refs.form.addEventListener('submit', e => {\n//   e.preventDefault();\n//   if (refs.loadmore) {\n//     refs.body.removeChild(refs.loadmore);\n//   }\n//   refs.container.innerHTML = '';\n//   requestParams.q = refs.input.value.trim();\n\n//   if (!Gallery.testInput(refs.input.value.trim())) {\n//     refs.form.classList.add('centered');\n//     Gallery.showPopup('wrong input');\n//     refs.form.reset();\n//     return;\n//   }\n\n//   spinner.add();\n\n//   fetch(`${requestUrl}?${new URLSearchParams(requestParams)}`)\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error('Something went wrong!');\n//       }\n//       return response.json();\n//     })\n//     .then(data => {\n//       if (!data.hits.length) {\n//         refs.form.classList.add('centered');\n//         Gallery.showPopup('nothing found');\n//         refs.form.reset();\n//         return;\n//       }\n//       refs.form.classList.remove('centered');\n//       const gallery = new Gallery(\n//         data.hits,\n//         '.js-gallery',\n//         ['largeImageURL', 'webformatURL', 'tags'],\n//         ['likes', 'views', 'comments', 'downloads'],\n//         refs.checkbox.checked\n//       );\n//       const lightboxInstance = new SimpleLightbox('.js-gallery a', {\n//         className: 'lightbox-wrapper',\n//       });\n\n//       spinner.remove();\n//       gallery.render();\n//       lightboxInstance.refresh();\n//       refs.container.insertAdjacentHTML(\n//         'afterend',\n//         `<button class=\"js-loadmore-button\" type=\"button\" name=\"loadmore\">\n//         Load more\n//       </button>`\n//       );\n//       refs.form.reset();\n//       refs.loadmore = document.querySelector('.js-loadmore-button');\n//       refs.loadmore.addEventListener('click', () => gallery.render());\n//     })\n//     .catch(error => console.log(error));\n// });\n\n// Код нижче був зроблений виключно у дослідницьких цілях\n\n// refs.input.addEventListener('input', e => {\n//   if (!/^[a-z\\s]+$/gi.test(e.target.value)) {\n//     setTimeout(() => {\n//       e.target.value = e.target.value.slice(0, -1);\n//     }, 100);\n//   }\n// });\n\n// axios.defaults.baseURL = 'https://pixabay.com/api/';\naxios.defaults.headers.common['header-name'] =\n  '42242477-df8643eaa45736c853493b589';\nconst result = axios.get('https://pixabay.com/api/', { params: requestParams });\nconsole.log(result);\n"],"names":["requestParams","axios","result"],"mappings":"svBA4NQ,SAAS,cAAc,MAAM,EAC7B,SAAS,cAAc,iBAAiB,EACvC,SAAS,cAAc,kBAAkB,EACrC,SAAS,cAAc,aAAa,EACrC,SAAS,cAAc,qBAAqB,EAC5C,SAAS,cAAc,qBAAqB,EAKxD,MAAMA,EAAgB,CACpB,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,EAAG,IACL,EAkFAC,EAAM,SAAS,QAAQ,OAAO,aAAa,EACzC,qCACF,MAAMC,EAASD,EAAM,IAAI,2BAA4B,CAAE,OAAQD,CAAa,CAAE,EAC9E,QAAQ,IAAIE,CAAM"}